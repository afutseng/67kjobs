// Generated by LiveScript 1.2.0
var x$;
x$ = angular.module('jobs', ['firebase']);
x$.directive('delayBk', function(){
  return {
    restrict: 'A',
    link: function(scope, e, attrs, ctrl){
      var url;
      url = attrs["delayBk"];
      return $('<img/>').attr('src', url).load(function(){
        $(this).remove();
        e.css({
          "backgroundImage": "url(" + url + ")"
        });
        return e.toggleClass('visible');
      });
    }
  };
});
x$.controller('index', function($scope, $timeout, $firebase){
  var update;
  $scope.jobtypes = jobtypes;
  $scope.needfix = false;
  $scope.newjob = {};
  if (true) {
    $scope.newjob = {
      title: '測試職稱',
      jobtype: null,
      jobname: null,
      salary1: 67000,
      salary2: 68000,
      location: '台北市',
      company: '市北台',
      email: 'blah@blah.io'
    };
  }
  $scope.user = null;
  $scope.jobtype = "";
  $scope.jobs = [];
  $scope.$watch('newjob.jobtype', function(v){
    if ($scope.newjob.jobtype) {
      $scope.jobs = $scope.newjob.jobtype.jobs;
      return console.log($scope.newjob.jobtype.jobs);
    }
  });
  $scope.dbRef = {
    date: new Firebase('https://joblist.firebaseio.com/jobs')
  };
  $scope.datasrc = {
    date: $firebase($scope.dbRef.date),
    get: function(arg$){
      var id, name;
      id = arg$.id, name = arg$.name;
      if (!this[name]) {
        if (!$scope.dbRef[name]) {
          $scope.dbRef[name] = new Firebase("https://joblist.firebaseio.com/cat" + id);
        }
        this[name] = $firebase($scope.dbRef[name]);
      }
      this[name].$on('loaded', function(it){
        return $scope.data[id] = it;
      });
      this[name].$on('change', function(it){
        return $scope.data[id] = it;
      });
      return this[name];
    }
  };
  $scope.data = {};
  $scope.auth = new FirebaseSimpleLogin($scope.dbRef.date, function(e, u){
    return $scope.$apply(function(){
      return $scope.user = u;
    });
  });
  $scope.login = function(){
    return $scope.auth.login('facebook');
  };
  $scope.logout = function(){
    return $scope.auth.logout();
  };
  $scope.joblist = [];
  update = function(){
    var item, results$ = [];
    $scope.joblist = [];
    for (item in $scope.datasrc.date) {
      if (item.indexOf("$") !== 0) {
        results$.push($scope.joblist.push($scope.datasrc.date[item]));
      }
    }
    return results$;
  };
  $scope.datasrc.date.$on('loaded', function(){
    return update();
  });
  $scope.datasrc.date.$on('change', function(){
    return update();
  });
  $scope.$watch('jobtab', function(){
    var src;
    if ($scope.jobtab) {
      return src = $scope.datasrc.get($scope.jobtab);
    }
  });
  return $scope.submit = function(){
    var check, t1, t2;
    check = ['jobname', 'salary2', 'salary1', 'company', 'email', 'jobtype', 'location', 'title'];
    t1 = $scope.newjobform.salary1;
    t2 = $scope.newjobform.salary2;
    t1.$setValidity('salary1', $scope.newjob.salary1 < 67000 ? false : true);
    t2.$setValidity('salary2', isNaN($scope.newjob.salary2) || $scope.newjob.salary2 < $scope.newjob.salary1 ? false : true);
    if (!$scope.user) {
      return;
    }
    if (check.map(function(it){
      return $scope.newjobform[it].$invalid;
    }).filter(function(it){
      return it;
    }).length) {
      console.log("submit job failed");
      $scope.needfix = true;
      return;
    }
    $scope.newjob.owner = {
      id: $scope.user.id,
      name: $scope.user.displayName
    };
    $scope.datasrc.date.$add($scope.newjob);
    $scope.datasrc.get($scope.newjob.jobtype).$add($scope.newjob);
    $scope.newjob = {};
    $scope.needfix = false;
    return console.log("job added");
  };
});